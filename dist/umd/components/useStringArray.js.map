{"version":3,"sources":["../../../src/components/useStringArray.ts"],"names":["useStringArray","value","ref","useRef"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA,QAAMA,cAAc,GAAIC,KAAD,IAA+B;AACpD;AACA;AACA,UAAMC,GAAG,GAAGC,mBAHwC,KAGxCA,CAAZ,CAHoD,CAKpD;;AACA,QAAIF,KAAK,CAALA,IAAAA,CAAAA,GAAAA,MAAoBC,GAAG,CAAHA,OAAAA,CAAAA,IAAAA,CAAxB,GAAwBA,CAAxB,EAA+C;AAC7CA,MAAAA,GAAG,CAAHA,OAAAA,GAAAA,KAAAA;AACD;;AAED,WAAOA,GAAG,CAAV,OAAA;AAVF,GAAA;;oBAaA,c","sourcesContent":["import { useRef } from \"react\";\n\nconst useStringArray = (value: string[]): string[] => {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<string[]>(value);\n\n  // update the array reference only if the string values are different:\n  if (value.join(\"|\") !== ref.current.join(\"|\")) {\n    ref.current = value;\n  }\n\n  return ref.current;\n};\n\nexport default useStringArray;\n"],"file":"useStringArray.js"}