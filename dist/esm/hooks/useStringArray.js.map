{"version":3,"sources":["../../../src/hooks/useStringArray.ts"],"names":["useRef","useStringArray","value","ref","join","current"],"mappings":"AAAA,gBAASA,MAAT,QAAuB,OAAvB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAA+B;AACpD;AACA;AACA,QAAMC,GAAG,GAAGH,MAAM,CAAWE,KAAX,CAAlB,CAHoD,CAKpD;;AACA,MAAIA,KAAK,CAACE,IAAN,CAAW,GAAX,MAAoBD,GAAG,CAACE,OAAJ,CAAYD,IAAZ,CAAiB,GAAjB,CAAxB,EAA+C;AAC7CD,IAAAA,GAAG,CAACE,OAAJ,GAAcH,KAAd;AACD;;AAED,SAAOC,GAAG,CAACE,OAAX;AACD,CAXD;;AAaA,eAAeJ,cAAf","sourcesContent":["import { useRef } from \"react\";\n\nconst useStringArray = (value: string[]): string[] => {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<string[]>(value);\n\n  // update the array reference only if the string values are different:\n  if (value.join(\"|\") !== ref.current.join(\"|\")) {\n    ref.current = value;\n  }\n\n  return ref.current;\n};\n\nexport default useStringArray;\n"],"file":"useStringArray.js"}