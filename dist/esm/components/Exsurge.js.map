{"version":3,"sources":["../../../src/components/Exsurge.tsx"],"names":["React","useState","useRef","useEffect","useCallback","WebFont","exsurge","usePrevious","useArray","getNotYetLoadedFonts","resolveFont","Exsurge","gabc","useDropCap","annotation","contentEditable","alignment","width","height","zoom","selection","id","style","className","supertitle","title","subtitle","textLeft","textRight","defaultFont","defaultColor","defaultTitleAlignment","font","staffSize","baseFontSize","interSyllabicSpacing","spaceBetweenSystems","spaceAboveLyrics","textStyles","onScoreUpdate","onKeyDown","supertitleSize","size","titleSize","subtitleSize","leftRightSize","leftRight","annotationArray","Array","textFontsArray","dropCap","al","choralSign","lyric","translation","textSizesArray","textColorsArray","color","titleAlignmentsArray","setRenderCount","ctxtRef","headerLenRef","fontLoaded","setFontLoaded","current","ctxt","ChantContext","TextMeasuringStrategy","Canvas","specialCharProperties","specialCharText","char","toLowerCase","textAfterSpecialChar","setRubricColor","minSpaceAboveStaff","editable","useExtraTextOnly","handleScoreUpdate","score","gabcHeaderLen","scoreRef","getScore","ChantScore","process","env","NODE_ENV","loadedFontsRef","loadedFonts","fontsUsedButNotLoaded","Set","families","from","map","length","load","google","classes","fontactive","familyName","fvd","fontinactive","resolveLocalFont","newFont","interSyllabicMultiplier","setStaffHeight","interVerbalMultiplier","minSpaceBelowStaff","setFont","k","textType","Object","entries","TextTypes","key","textStyle","defaultSize","undefined","defaultLanguage","language","forceLayout","recreateDropCap","insertion","element","selectionInsertion","afterElementIndex","chantLine","previousSelectionInsertion","elementSelection","Gabc","updateMappingsFromSource","mappings","updateNotations","Annotations","titles","setSupertitle","setTitle","setSubtitle","setTextLeft","setTextRight","performLayout","layoutChantLines","paginate","count","newSelection","updateSelection","createReactSvg","svgTree","createElement","name","Fragment","props","children","divs","pages","page","i","createSvgTree"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport WebFont from \"webfontloader\";\nimport * as exsurge from \"exsurge\";\nimport { TextTypesOptions } from \"../interfaces/TextTypeOptions\";\nimport { LoadedFontsDictionary } from \"../interfaces/LoadedFontsDictionary\";\nimport usePrevious from \"../hooks/usePrevious\";\nimport useArray from \"../hooks/useArray\";\nimport getNotYetLoadedFonts from \"../utils/getNotYetLoadedFonts\";\nimport resolveFont from \"../utils/resolveFont\";\n\ninterface ExsurgeProps {\n  gabc: string;\n  useDropCap?: boolean;\n  annotation?: string | string[];\n  contentEditable?: boolean;\n  alignment?: \"english\" | \"latin\";\n  width?: number;\n  height?: number;\n  zoom?: number;\n  selection?: exsurge.Selection;\n\n  id?: string;\n  style?: any;\n  className?: string;\n\n  supertitle?: string;\n  title?: string;\n  subtitle?: string;\n  textLeft?: string;\n  textRight?: string;\n\n  defaultFont?: string;\n  defaultColor?: string;\n  defaultTitleAlignment?: string;\n\n  font?: string;\n  baseFontSize?: number;\n  staffSize?: number;\n  interSyllabicSpacing?: number;\n  spaceBetweenSystems?: number;\n  spaceAboveLyrics?: number;\n\n  textStyles?: TextTypesOptions;\n\n  onScoreUpdate?(score: exsurge.ChantScore, gabceHeaderLen: number): any;\n  onKeyDown?(event: React.KeyboardEvent<HTMLDivElement>): any;\n}\n\nconst Exsurge: React.FC<ExsurgeProps> = ({\n  gabc,\n  useDropCap = true,\n  annotation = [],\n  contentEditable = false,\n  alignment = \"latin\",\n  width = -1,\n  height = -1,\n  zoom,\n  selection,\n\n  id,\n  style,\n  className,\n\n  supertitle,\n  title,\n  subtitle,\n  textLeft,\n  textRight,\n\n  defaultFont = \"EB Garamond\",\n  defaultColor = \"#000000\",\n  defaultTitleAlignment = \"center\",\n\n  font,\n  staffSize = 37.5,\n  baseFontSize = (staffSize * 19.2) / 37.5,\n  interSyllabicSpacing = 2.5,\n  spaceBetweenSystems = 1.5,\n  spaceAboveLyrics = 0.75,\n\n  textStyles = {},\n\n  onScoreUpdate,\n  onKeyDown,\n}: ExsurgeProps) => {\n  const supertitleSize = textStyles.supertitle?.size;\n  const titleSize = textStyles.title?.size;\n  const subtitleSize = textStyles.subtitle?.size;\n  const leftRightSize = textStyles.leftRight?.size;\n\n  const annotationArray = useArray(\n    annotation instanceof Array ? annotation : [annotation]\n  );\n  const textFontsArray = useArray([\n    textStyles.supertitle?.font,\n    textStyles.title?.font,\n    textStyles.subtitle?.font,\n    textStyles.leftRight?.font,\n    textStyles.annotation?.font,\n    textStyles.dropCap?.font,\n    textStyles.al?.font,\n    textStyles.choralSign?.font,\n    textStyles.lyric?.font,\n    textStyles.translation?.font,\n    font,\n    defaultFont,\n  ]);\n  const textSizesArray = useArray([\n    textStyles.supertitle?.size,\n    textStyles.title?.size,\n    textStyles.subtitle?.size,\n    textStyles.leftRight?.size,\n    textStyles.annotation?.size,\n    textStyles.dropCap?.size,\n    textStyles.al?.size,\n    textStyles.choralSign?.size,\n    textStyles.lyric?.size,\n    textStyles.translation?.size,\n  ]);\n  const textColorsArray = useArray([\n    textStyles.supertitle?.color,\n    textStyles.title?.color,\n    textStyles.subtitle?.color,\n    textStyles.leftRight?.color,\n    textStyles.annotation?.color,\n    textStyles.dropCap?.color,\n    textStyles.al?.color,\n    textStyles.choralSign?.color,\n    textStyles.lyric?.color,\n    textStyles.translation?.color,\n  ]);\n  const titleAlignmentsArray = useArray([\n    textStyles.supertitle?.alignment,\n    textStyles.title?.alignment,\n    textStyles.subtitle?.alignment,\n  ]);\n\n  const [, setRenderCount] = useState(0);\n  const ctxtRef: React.MutableRefObject<\n    exsurge.ChantContext | undefined\n  > = useRef();\n  const headerLenRef = useRef(0);\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  if (!ctxtRef.current) {\n    let ctxt = (ctxtRef.current = new exsurge.ChantContext(\n      exsurge.TextMeasuringStrategy.Canvas\n    ));\n\n    ctxt.specialCharProperties[\"font-family\"] = `Versiculum`;\n    ctxt.specialCharProperties[\"font-variant\"] = \"normal\";\n    ctxt.specialCharProperties[\"font-size\"] = \"120%\";\n    ctxt.specialCharProperties[\"font-weight\"] = \"400\";\n    ctxt.specialCharText = (char) => char.toLowerCase();\n    ctxt.textAfterSpecialChar = \"\";\n    ctxt.setRubricColor(\"#d00\");\n    ctxt.minSpaceAboveStaff = 0;\n\n    ctxt.editable = !!contentEditable;\n\n    ctxt.useExtraTextOnly = !contentEditable;\n  }\n\n  const ctxt: exsurge.ChantContext = ctxtRef.current;\n  const handleScoreUpdate = useCallback(\n    (score, gabcHeaderLen) => {\n      if (typeof onScoreUpdate === \"function\")\n        onScoreUpdate(score, gabcHeaderLen);\n    },\n    [onScoreUpdate]\n  );\n  const scoreRef: React.MutableRefObject<\n    exsurge.ChantScore | undefined\n  > = useRef();\n  function getScore() {\n    if (!scoreRef.current) scoreRef.current = new exsurge.ChantScore(ctxt);\n    return scoreRef.current;\n  }\n\n  const score = getScore();\n  if (process.env.NODE_ENV === \"development\") {\n    // DEBUG: window.$score = score;\n  }\n\n  // load font.  Right now we use Google, but webfontloader supports\n  // • edgewebfonts.adobe.com\n  // • Fontdeck.com\n  // • Fonts.com\n  // • Typekit.com\n  const loadedFontsRef: React.MutableRefObject<LoadedFontsDictionary> = useRef(\n    {}\n  );\n  useEffect(() => {\n    // TODO...keep track of whether Bold, Italic, etc. are needed, and load them as necessary\n\n    // first calculate which distinct fonts we need:\n    const loadedFonts = loadedFontsRef.current,\n      fontsUsedButNotLoaded = new Set(\n        getNotYetLoadedFonts(textFontsArray, loadedFonts)\n      ),\n      families = Array.from(fontsUsedButNotLoaded).map(\n        (font) => `${font}:400,400i,700,700i`\n      );\n    if (families.length) {\n      setFontLoaded(false);\n      WebFont.load({\n        google: {\n          families,\n        },\n        classes: false,\n        fontactive: (familyName, fvd) => {\n          if (fvd === \"n4\") {\n            loadedFonts[familyName] = true;\n            if (getNotYetLoadedFonts(textFontsArray, loadedFonts).length === 0)\n              // all required fonts have been loaded:\n              setFontLoaded(true);\n          }\n        },\n        fontinactive: (familyName, fvd) => {\n          if (fvd === \"n4\") {\n            loadedFonts[familyName] = false;\n          }\n        },\n      });\n    }\n  }, [textFontsArray]);\n\n  const resolveLocalFont = useCallback(\n    (newFont?: string) =>\n      resolveFont(loadedFontsRef.current, newFont, font, defaultFont),\n    [font, defaultFont]\n  );\n\n  // Set fonts, sizes, and colors:\n  useEffect(() => {\n    // don't set the fonts if they haven't yet loaded:\n    if (getNotYetLoadedFonts(textFontsArray, loadedFontsRef.current).length > 0)\n      return;\n    const interSyllabicMultiplier = interSyllabicSpacing;\n    ctxt.setStaffHeight(staffSize);\n    ctxt.interSyllabicMultiplier = interSyllabicMultiplier;\n    ctxt.interVerbalMultiplier = interSyllabicMultiplier * 0.25;\n    ctxt.spaceBetweenSystems = spaceBetweenSystems;\n    ctxt.minSpaceBelowStaff = spaceAboveLyrics;\n    ctxt.setFont(resolveLocalFont(textStyles.lyric?.font), baseFontSize);\n    for (let [k, textType] of Object.entries(exsurge.TextTypes)) {\n      // Is there a better way to do type assertion than this?\n      let key = k as keyof exsurge.TextTypes;\n      const textStyle = textStyles[key] || {};\n      // font\n      ctxt.textStyles[key].font = resolveLocalFont(textStyle.font);\n      // size\n      if (textType.defaultSize && textStyle.size !== undefined) {\n        ctxt.textStyles[key].size = textType.defaultSize(\n          textStyle.size * baseFontSize\n        );\n      }\n      // color\n      ctxt.textStyles[key].color = textStyle.color || defaultColor;\n      // alignment\n      switch (key) {\n        case \"supertitle\":\n        case \"title\":\n        case \"subtitle\":\n          ctxt.textStyles[key].alignment =\n            textStyle?.alignment || defaultTitleAlignment;\n          break;\n        // TODO: allow padding to be changed? on dropCap and annotation\n      }\n    }\n    ctxt.defaultLanguage = exsurge.language[alignment];\n    score.forceLayout = true;\n    // eslint-disable-next-line\n  }, [\n    fontLoaded,\n    font,\n    defaultFont,\n    staffSize,\n    interSyllabicSpacing,\n    spaceBetweenSystems,\n    baseFontSize,\n    alignment,\n\n    textSizesArray,\n    textFontsArray,\n    textColorsArray,\n    titleAlignmentsArray,\n\n    ctxt,\n    score,\n  ]);\n\n  useEffect(() => {\n    score.useDropCap = useDropCap;\n    score.recreateDropCap(ctxt);\n    score.forceLayout = true;\n    handleScoreUpdate(score, headerLenRef.current);\n  }, [useDropCap, score, ctxt, handleScoreUpdate]);\n\n  const insertion =\n    selection && selection.element && selection.element.insertion;\n  const selectionInsertion = insertion\n    ? typeof insertion.afterElementIndex === \"number\"\n      ? insertion.afterElementIndex\n      : -1 - (insertion.chantLine || -1)\n    : undefined;\n  const previousSelectionInsertion = usePrevious(selectionInsertion);\n  const elementSelection = (selection && selection.element) || null;\n  useEffect(() => {\n    headerLenRef.current = exsurge.Gabc.updateMappingsFromSource(\n      ctxt,\n      score.mappings,\n      gabc,\n      selectionInsertion,\n      previousSelectionInsertion\n    );\n    score.updateNotations(ctxt);\n    handleScoreUpdate(score, headerLenRef.current);\n  }, [gabc, selectionInsertion, ctxt, score, handleScoreUpdate]);\n\n  useEffect(() => {\n    score.annotation = annotationArray.length\n      ? new exsurge.Annotations(ctxt, ...annotationArray)\n      : null;\n    handleScoreUpdate(score, headerLenRef.current);\n  }, [annotationArray, ctxt, score, handleScoreUpdate]);\n\n  // title effects:\n  useEffect(() => {\n    score.titles.setSupertitle(ctxt, supertitle);\n    handleScoreUpdate(score, headerLenRef.current);\n  }, [score, ctxt, supertitle, supertitleSize, handleScoreUpdate]);\n  useEffect(() => {\n    score.titles.setTitle(ctxt, title);\n    handleScoreUpdate(score, headerLenRef.current);\n  }, [score, ctxt, title, titleSize, handleScoreUpdate]);\n  useEffect(() => {\n    score.titles.setSubtitle(ctxt, subtitle);\n    handleScoreUpdate(score, headerLenRef.current);\n  }, [score, ctxt, subtitle, subtitleSize, handleScoreUpdate]);\n  useEffect(() => {\n    score.titles.setTextLeft(ctxt, textLeft);\n    handleScoreUpdate(score, headerLenRef.current);\n  }, [score, ctxt, textLeft, leftRightSize, handleScoreUpdate]);\n  useEffect(() => {\n    score.titles.setTextRight(ctxt, textRight);\n    handleScoreUpdate(score, headerLenRef.current);\n  }, [score, ctxt, textRight, leftRightSize, handleScoreUpdate]);\n\n  useEffect(() => {\n    if (!fontLoaded) return;\n    score.performLayout(ctxt, score.forceLayout);\n    score.forceLayout = false;\n  }, [\n    score,\n    ctxt,\n    fontLoaded,\n\n    textFontsArray,\n    textSizesArray,\n    textColorsArray,\n    titleAlignmentsArray,\n\n    staffSize,\n    interSyllabicSpacing,\n    spaceBetweenSystems,\n    baseFontSize,\n    alignment,\n    useDropCap,\n    gabc,\n    selectionInsertion,\n    annotationArray,\n    handleScoreUpdate,\n  ]);\n\n  // const appendSvgForPage = useCallback(pageI => {\n  //   const svgParent = divRefs.current[pageI];\n  //   while (svgParent && svgParent.firstChild)\n  //     svgParent.removeChild(svgParent.firstChild);\n  //   let svg = svgRefs.current[pageI];\n  //   if (svgParent && svg) svgParent.appendChild(svg);\n  // }, []);\n\n  // const divRefs = useRef([]),\n  //   svgRefs = useRef([]);\n  // const [pageCount, setPageCount] = useState(1);\n  // const addSvgRef = (ref, i) => {\n  //   divRefs.current[i] = ref;\n  //   appendSvgForPage(i);\n  // };\n\n  useEffect(() => {\n    if (!fontLoaded) return;\n    score.layoutChantLines(ctxt, width);\n    if (height > 0) {\n      score.paginate(height);\n      // setPageCount(score.pages.length);\n    }\n    setRenderCount((count) => count + 1);\n  }, [\n    score,\n    ctxt,\n    fontLoaded,\n\n    textFontsArray,\n    textSizesArray,\n    textColorsArray,\n    titleAlignmentsArray,\n\n    supertitle,\n    title,\n    subtitle,\n    textLeft,\n    textRight,\n\n    staffSize,\n    interSyllabicSpacing,\n    spaceBetweenSystems,\n    baseFontSize,\n    alignment,\n    useDropCap,\n    gabc,\n    selectionInsertion,\n    annotationArray,\n    width,\n    height,\n    handleScoreUpdate,\n  ]);\n\n  // selection:\n  useEffect(() => {\n    let newSelection: exsurge.Selection = {};\n    if (elementSelection) newSelection.element = elementSelection;\n    score.updateSelection(newSelection);\n    setRenderCount((count) => count + 1);\n  }, [score, ctxt, elementSelection]);\n\n  const createReactSvg = (\n    svgTree: exsurge.SvgTreeNode | string\n  ): React.ReactElement | string =>\n    typeof svgTree === \"string\"\n      ? svgTree\n      : React.createElement(\n          svgTree.name || React.Fragment,\n          svgTree.props,\n          ...(svgTree.children || []).map(createReactSvg)\n        );\n\n  const divs = (score.pages || []).map((page, i) => (\n    <div\n      key={i}\n      id={id && id + \"-\" + i}\n      className={`Exsurge ${className || \"\"}`}\n      style={style}\n      contentEditable={contentEditable}\n      onKeyDown={onKeyDown}\n    >\n      {createReactSvg(page.createSvgTree(ctxt, zoom))}\n    </div>\n  ));\n\n  return <>{divs}</>;\n};\n\nexport default Exsurge;\nexport * from \"exsurge\";\n"],"file":"Exsurge.js"}